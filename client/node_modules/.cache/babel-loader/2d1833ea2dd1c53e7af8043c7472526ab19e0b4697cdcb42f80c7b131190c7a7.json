{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\helen\\\\Downloads\\\\hackthonNME\\\\client\\\\src\\\\pages\\\\HomePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Slider from '../components/Slider';\nimport '../styles/HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = [{\n  name: \"Global Warming\",\n  min: 0,\n  max: 100,\n  unit: \"\"\n}, {\n  name: \"Nitrogen Air Pollution\",\n  min: 100000,\n  max: 300000000,\n  unit: \"\"\n}, {\n  name: \"Carbon Monoxide Air Pollution\",\n  min: 10000000,\n  max: 300000000,\n  unit: \"\"\n}, {\n  name: \"Black Carbon Air Pollution\",\n  min: 1000000,\n  max: 20000000,\n  unit: \"\"\n}, {\n  name: \"Poverty\",\n  min: 0,\n  max: 100,\n  unit: \"%\"\n}, {\n  name: \"World Hunger\",\n  min: 0,\n  max: 100,\n  unit: \"%\"\n}, {\n  name: \"Microplastics\",\n  min: 0,\n  max: 25,\n  unit: \"\"\n}, {\n  name: \"Clean Water\",\n  min: 0,\n  max: 100,\n  unit: \"%\"\n}, {\n  name: \"HIV\",\n  min: 0,\n  max: 5,\n  unit: \"\"\n}, {\n  name: \"Tuberculosis\",\n  min: 0,\n  max: 1000,\n  unit: \"\"\n}, {\n  name: \"Malaria\",\n  min: 0,\n  max: 200,\n  unit: \"\"\n}, {\n  name: \"Life Expectancy\",\n  min: 0,\n  max: 250,\n  unit: \" years\"\n}];\nconst HomePage = () => {\n  _s();\n  const [selectedYear, setSelectedYear] = useState(2000);\n  const [predictions, setPredictions] = useState({});\n  useEffect(() => {\n    const fetchPredictions = async () => {\n      const newPredictions = {};\n      for (const category of categories) {\n        try {\n          const response = await fetch(`http://localhost:8000/predict?metric=${encodeURIComponent(category.name)}&year=${selectedYear}&min=${category.min}&max=${category.max}`);\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.json();\n          newPredictions[category.name] = data.prediction;\n        } catch (error) {\n          console.error(`Error fetching prediction for ${category.name}:`, error);\n          // Fallback to random value if API call fails\n          newPredictions[category.name] = Math.floor(Math.random() * (category.max - category.min) + category.min);\n        }\n      }\n      setPredictions(newPredictions);\n    };\n    fetchPredictions();\n  }, [selectedYear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Environmental and Health Indicators\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Select Year: \", selectedYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        min: 2000,\n        max: 3000,\n        onChange: setSelectedYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categories-container\",\n      children: categories.map(category => {\n        const value = predictions[category.name] || category.min;\n        const percentage = (value - category.min) / (category.max - category.min) * 100;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category-value\",\n              children: [value.toLocaleString(), category.unit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              style: {\n                width: `${percentage}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"range-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Min: \", category.min.toLocaleString(), category.unit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Max: \", category.max.toLocaleString(), category.unit]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, category.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"2bxebvY2TnOyxu/OVyWXYJjuZ30=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Slider","jsxDEV","_jsxDEV","categories","name","min","max","unit","HomePage","_s","selectedYear","setSelectedYear","predictions","setPredictions","fetchPredictions","newPredictions","category","response","fetch","encodeURIComponent","ok","Error","status","data","json","prediction","error","console","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","value","percentage","toLocaleString","style","width","_c","$RefreshReg$"],"sources":["C:/Users/helen/Downloads/hackthonNME/client/src/pages/HomePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Slider from '../components/Slider';\r\nimport '../styles/HomePage.css';\r\n\r\ninterface Category {\r\n  name: string;\r\n  min: number;\r\n  max: number;\r\n  unit: string;\r\n}\r\n\r\nconst categories: Category[] = [\r\n  { name: \"Global Warming\", min: 0, max: 100, unit: \"\" },\r\n  { name: \"Nitrogen Air Pollution\", min: 100000, max: 300000000, unit: \"\" },\r\n  { name: \"Carbon Monoxide Air Pollution\", min: 10000000, max: 300000000, unit: \"\" },\r\n  { name: \"Black Carbon Air Pollution\", min: 1000000, max: 20000000, unit: \"\" },\r\n  { name: \"Poverty\", min: 0, max: 100, unit: \"%\" },\r\n  { name: \"World Hunger\", min: 0, max: 100, unit: \"%\" },\r\n  { name: \"Microplastics\", min: 0, max: 25, unit: \"\" },\r\n  { name: \"Clean Water\", min: 0, max: 100, unit: \"%\" },\r\n  { name: \"HIV\", min: 0, max: 5, unit: \"\" },\r\n  { name: \"Tuberculosis\", min: 0, max: 1000, unit: \"\" },\r\n  { name: \"Malaria\", min: 0, max: 200, unit: \"\" },\r\n  { name: \"Life Expectancy\", min: 0, max: 250, unit: \" years\" }\r\n];\r\n\r\nconst HomePage: React.FC = () => {\r\n  const [selectedYear, setSelectedYear] = useState<number>(2000);\r\n  const [predictions, setPredictions] = useState<Record<string, number>>({});\r\n\r\n  useEffect(() => {\r\n    const fetchPredictions = async () => {\r\n      const newPredictions: Record<string, number> = {};\r\n      \r\n      for (const category of categories) {\r\n        try {\r\n          const response = await fetch(`http://localhost:8000/predict?metric=${encodeURIComponent(category.name)}&year=${selectedYear}&min=${category.min}&max=${category.max}`);\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n          }\r\n          const data = await response.json();\r\n          newPredictions[category.name] = data.prediction;\r\n        } catch (error) {\r\n          console.error(`Error fetching prediction for ${category.name}:`, error);\r\n          // Fallback to random value if API call fails\r\n          newPredictions[category.name] = Math.floor(Math.random() * (category.max - category.min) + category.min);\r\n        }\r\n      }\r\n      \r\n      setPredictions(newPredictions);\r\n    };\r\n\r\n    fetchPredictions();\r\n  }, [selectedYear]);\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <h1>Environmental and Health Indicators</h1>\r\n      <div className=\"year-selector\">\r\n        <h2>Select Year: {selectedYear}</h2>\r\n        <Slider \r\n          min={2000} \r\n          max={3000} \r\n          onChange={setSelectedYear} \r\n        />\r\n      </div>\r\n      \r\n      <div className=\"categories-container\">\r\n        {categories.map((category) => {\r\n          const value = predictions[category.name] || category.min;\r\n          const percentage = ((value - category.min) / (category.max - category.min)) * 100;\r\n          \r\n          return (\r\n            <div key={category.name} className=\"category-container\">\r\n              <div className=\"category-header\">\r\n                <h3>{category.name}</h3>\r\n                <span className=\"category-value\">{value.toLocaleString()}{category.unit}</span>\r\n              </div>\r\n              <div className=\"progress-bar-container\">\r\n                <div \r\n                  className=\"progress-bar\" \r\n                  style={{ width: `${percentage}%` }}\r\n                />\r\n              </div>\r\n              <div className=\"range-info\">\r\n                <span>Min: {category.min.toLocaleString()}{category.unit}</span>\r\n                <span>Max: {category.max.toLocaleString()}{category.unit}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}